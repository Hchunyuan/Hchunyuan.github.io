<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
            <title type="text">博客</title>
    <updated>2020-03-02T22:30:17+08:00</updated>
        <id>/blog</id>
        <link rel="alternate" type="text/html" href="/blog" />
        <link rel="self" type="application/atom+xml" href="/blog/atom.xml" />
    <rights>Copyright © 2020, 博客</rights>
    <generator uri="https://halo.run/" version="">Halo</generator>
            <entry>
                <title><![CDATA[springboot https]]></title>
                <link rel="alternate" type="text/html" href="/blog/archives/springboothttps" />
                <id>tag:/blog,2020-03-02:springboothttps</id>
                <published>2020-03-02T22:29:50+08:00</published>
                <updated>2020-03-02T22:29:50+08:00</updated>
                <author>
                    <name>hcy</name>
                    <uri>/blog</uri>
                </author>
                <content type="html" xml:base="/blog" xml:lang="en">
                    <![CDATA[
                            <pre><code class="language-java">    // springboot2 写法
    @Bean
    public TomcatServletWebServerFactory servletContainer() {
        TomcatServletWebServerFactory tomcat = new TomcatServletWebServerFactory() {
            @Override
            protected void postProcessContext(Context context) {
                SecurityConstraint constraint = new SecurityConstraint();
                constraint.setUserConstraint(&quot;CONFIDENTIAL&quot;);
                SecurityCollection collection = new SecurityCollection();
                collection.addPattern(&quot;/*&quot;);
                constraint.addCollection(collection);
                context.addConstraint(constraint);
            }
        };
        tomcat.addAdditionalTomcatConnectors(httpConnector());
        return tomcat;
    }
 
    @Bean
    public Connector httpConnector() {
        Connector connector = new Connector(&quot;org.apache.coyote.http11.Http11NioProtocol&quot;);
        connector.setScheme(&quot;http&quot;);
        //Connector监听的http的端口号
        connector.setPort(80);
        connector.setSecure(false);
        //监听到http的端口号后转向到的https的端口号
        connector.setRedirectPort(8088);
        return connector;
    }

</code></pre>

                    ]]>
                </content>
            </entry>
            <entry>
                <title><![CDATA[阿里云仓库]]></title>
                <link rel="alternate" type="text/html" href="/blog/archives/阿里云仓库" />
                <id>tag:/blog,2020-02-28:%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%93%E5%BA%93</id>
                <published>2020-02-28T23:49:18+08:00</published>
                <updated>2020-03-01T00:34:53+08:00</updated>
                <author>
                    <name>hcy</name>
                    <uri>/blog</uri>
                </author>
                <content type="html" xml:base="/blog" xml:lang="en">
                    <![CDATA[
                            <pre><code class="language-gradle">maven {
        url   'https://maven.aliyun.com/nexus/content/groups/public'
    }

</code></pre>

                    ]]>
                </content>
            </entry>
</feed>
